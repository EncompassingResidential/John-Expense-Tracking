{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johnc\\\\Documents\\\\Computer\\\\SDMM\\\\john-expense-tracking\\\\expense-tracker\\\\src\\\\MainContent.js\";\nimport React from 'react'; // import ReactDOM from 'react-dom';\n\nimport data from \"./data.js\";\nimport star_image from \"./images/star.png\"; // img src Works after moving src/images folder to public/images\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExperienceItem(props) {\n  let badgeText;\n\n  if (props.openSpots === 0) {\n    badgeText = \"SOLD OUT\";\n  } else if (props.location === \"Online\") {\n    badgeText = \"ONLINE\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card--badge\",\n      children: badgeText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `./images/${props.image}`,\n      alt: props.Experience_Description,\n      className: \"card--image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card--stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: star_image,\n        alt: \"Favorite\",\n        className: \"star--image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [props.score, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"gray\",\n        children: [\"(\", props.number, \") \\u2022 \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"gray\",\n        children: props.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.Experience_Description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bold\",\n        children: [\"From $\", props.money_amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 10\n      }, this), \" / person\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ExperienceItem;\nexport default function Card() {\n  // <Hero />\n  const cards = data.map(item => {\n    return /*#__PURE__*/_jsxDEV(ExperienceItem, {\n      image: item.coverImg,\n      score: item.stats.rating,\n      number: item.stats.reviewCount,\n      location: item.location,\n      Experience_Description: item.title,\n      money_amount: item.price,\n      openSpots: item.openSpots\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"experience--grid\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"card--stats\",\n      children: cards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n}\n_c2 = Card;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ExperienceItem\");\n$RefreshReg$(_c2, \"Card\");","map":{"version":3,"sources":["C:/Users/johnc/Documents/Computer/SDMM/john-expense-tracking/expense-tracker/src/MainContent.js"],"names":["React","data","star_image","ExperienceItem","props","badgeText","openSpots","location","image","Experience_Description","score","number","money_amount","Card","cards","map","item","coverImg","stats","rating","reviewCount","title","price","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,UAAP,MAAuB,mBAAvB,C,CAEA;;;;AACA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,MAAIC,SAAJ;;AACA,MAAID,KAAK,CAACE,SAAN,KAAoB,CAAxB,EAA2B;AACzBD,IAAAA,SAAS,GAAG,UAAZ;AACD,GAFD,MAEO,IAAID,KAAK,CAACG,QAAN,KAAmB,QAAvB,EAAiC;AACpCF,IAAAA,SAAS,GAAG,QAAZ;AACH;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,GAAG,EAAG,YAAWD,KAAK,CAACI,KAAM,EAAlC;AAAqC,MAAA,GAAG,EAAEJ,KAAK,CAACK,sBAAhD;AAAwE,MAAA,SAAS,EAAC;AAAlF;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEP,UAAV;AAAsB,QAAA,GAAG,EAAC,UAA1B;AAAqC,QAAA,SAAS,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mBAAOE,KAAK,CAACM,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,wBAAyBN,KAAK,CAACO,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,kBAAwBP,KAAK,CAACG;AAA9B;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eASE;AAAA,gBAAIH,KAAK,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAA,8BAAG;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,6BAA8BL,KAAK,CAACQ,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;KAtBQT,c;AAwBT,eAAe,SAASU,IAAT,GAAgB;AAC7B;AAEA,QAAMC,KAAK,GAAGb,IAAI,CAACc,GAAL,CAASC,IAAI,IAAI;AAC3B,wBACE,QAAC,cAAD;AAEA,MAAA,KAAK,EAAEA,IAAI,CAACC,QAFZ;AAGA,MAAA,KAAK,EAAED,IAAI,CAACE,KAAL,CAAWC,MAHlB;AAIA,MAAA,MAAM,EAAEH,IAAI,CAACE,KAAL,CAAWE,WAJnB;AAKA,MAAA,QAAQ,EAAEJ,IAAI,CAACT,QALf;AAMA,MAAA,sBAAsB,EAAES,IAAI,CAACK,KAN7B;AAOA,MAAA,YAAY,EAAEL,IAAI,CAACM,KAPnB;AAQA,MAAA,SAAS,EAAEN,IAAI,CAACV;AARhB,OACKU,IAAI,CAACO,EADV;AAAA;AAAA;AAAA;AAAA,YADF;AAYD,GAbW,CAAd;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,2BACA;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA,gBACGT;AADH;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOC;MAzBqBD,I","sourcesContent":["import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n\r\nimport data from \"./data.js\";\r\n\r\nimport star_image from \"./images/star.png\";\r\n\r\n// img src Works after moving src/images folder to public/images\r\nfunction ExperienceItem(props) {\r\n  let badgeText\r\n  if (props.openSpots === 0) {\r\n    badgeText = \"SOLD OUT\"\r\n  } else if (props.location === \"Online\") {\r\n      badgeText = \"ONLINE\"\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card--badge\">{badgeText}</div>\r\n      <img src={`./images/${props.image}`} alt={props.Experience_Description} className=\"card--image\" />\r\n      <div className=\"card--stats\">\r\n        <img src={star_image} alt=\"Favorite\" className=\"star--image\" />\r\n        <span>{props.score} </span>\r\n        <span className=\"gray\">({props.number}) â€¢ </span>\r\n        <span className=\"gray\">{props.location}</span>\r\n      </div>\r\n      <p>{props.Experience_Description}</p>\r\n      <p><span className=\"bold\">From ${props.money_amount}</span> / person</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default function Card() {\r\n  // <Hero />\r\n\r\n  const cards = data.map(item => {\r\n      return (\r\n        <ExperienceItem\r\n        key={item.id}\r\n        image={item.coverImg}\r\n        score={item.stats.rating}\r\n        number={item.stats.reviewCount}\r\n        location={item.location}\r\n        Experience_Description={item.title}\r\n        money_amount={item.price}\r\n        openSpots={item.openSpots}\r\n        />\r\n      )\r\n    }\r\n  )\r\n  return (\r\n      <div className=\"experience--grid\">\r\n      <section className=\"card--stats\">\r\n        {cards}\r\n      </section>\r\n      </div>\r\n    )\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}